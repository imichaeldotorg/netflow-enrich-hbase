version: '2'
networks:
  cluster:
services:

  generator:
    build:
      context: generator/
      dockerfile: Dockerfile
    networks:
      - cluster
    command: "/bin/bash -c 'true'"  # Don't run by default

  collector:
    build:
      context: collector/
      dockerfile: Dockerfile
    networks:
      - cluster
    command: "/bin/bash -c 'sleep 15 && python /opt/netflow-collector.py'"  # Delay for Kafka to start
    expose:
      - 50000

  kafka:
    build: 
      context: kafka/
      dockerfile: Dockerfile
    networks:
      - cluster
    expose:
      - 9092
      - 9121

  zookeeper:
    image: zookeeper:3.4.9
    ports:
      - 2181
    networks: 
      - cluster
    environment:
        ZOO_MY_ID: 1
        ZOO_SERVERS: server.1=zookeeper:2888:3888 server.2=zookeeper_2:2888:3888 server.3=zookeeper_3:2888:3888

  zookeeper_2:
    image: zookeeper:3.4.9
    ports:
      - 2181
    networks: 
      - cluster
    environment:
        ZOO_MY_ID: 2
        ZOO_SERVERS: server.1=zookeeper:2888:3888 server.2=zookeeper_2:2888:3888 server.3=zookeeper_3:2888:3888

  zookeeper_3:
    image: zookeeper:3.4.9
    ports:
      - 2181
    networks: 
      - cluster
    environment:
        ZOO_MY_ID: 3
        ZOO_SERVERS: server.1=zookeeper:2888:3888 server.2=zookeeper_2:2888:3888 server.3=zookeeper_3:2888:3888


  hbase:
    build: 
      context: hbase/
      dockerfile: Dockerfile
    networks:
      - cluster
    expose:
      - 2181
      - 60000
      - 60010
      - 60020
      - 60030
      - 8080
      - 9090
      - 9095
    ports:
      - "2181:2181"
      - "60000:60000"
    environment:
      - JAVA_HOME:/usr/lib/jvm/java-8-openjdk-amd64/jre/

  storm_nimbus:
    build: 
      context: storm/
      dockerfile: Dockerfile
    networks:
      - cluster
    expose:
      - 6700
      - 6701
      - 6702
      - 6703
    command: "/opt/apache-storm-1.0.2/bin/storm nimbus"

  storm_ui:
    build: 
      context: storm/
      dockerfile: Dockerfile
    networks:
      - cluster
    ports:
      - "8080:8080"  # UI Port

    command: "/opt/apache-storm-1.0.2/bin/storm ui"

  storm_supervisor:
    build: 
      context: storm/
      dockerfile: Dockerfile
    networks:
      - cluster
    expose:
      - 6700
      - 6701
      - 6702
      - 6703
    ports:  
      - "8000:8000"  # Logging Port
    command: "/opt/apache-storm-1.0.2/bin/storm supervisor"

  storm_workspace:
    build: 
      context: storm/
      dockerfile: Dockerfile
    networks:
      - cluster
    # volumes:
    #  - "./storm/topology:/opt/topology"
    command: "/bin/bash /opt/topology/do-nothing.bash"  # We want this container to silently exit, will call from command line.
